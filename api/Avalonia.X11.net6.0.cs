//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GenAPI Version: 7.0.8.6004
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Avalonia
{
    public static partial class AvaloniaX11PlatformExtensions
    {
        public static void InitializeX11Platform(Avalonia.X11PlatformOptions options = null) { }
        public static Avalonia.AppBuilder UseX11(this Avalonia.AppBuilder builder) { throw null; }
    }
    public partial class X11PlatformOptions
    {
        public X11PlatformOptions() { }
        public bool? EnableIme { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public bool? EnableMultiTouch { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public bool EnableSessionManagement { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public System.Collections.Generic.IList<Avalonia.OpenGL.GlVersion> GlProfiles { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public System.Collections.Generic.IList<string> GlxRendererBlacklist { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public bool OverlayPopups { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public bool UseDBusFilePicker { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public bool UseDBusMenu { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public bool UseEGL { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public bool UseGpu { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public string WmClass { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
    }
}
namespace Avalonia.X11
{
    public enum Status
    {
        Success = 0,
        BadRequest = 1,
        BadValue = 2,
        BadWindow = 3,
        BadPixmap = 4,
        BadAtom = 5,
        BadCursor = 6,
        BadFont = 7,
        BadMatch = 8,
        BadDrawable = 9,
        BadAccess = 10,
        BadAlloc = 11,
        BadColor = 12,
        BadGC = 13,
        BadIDChoice = 14,
        BadName = 15,
        BadLength = 16,
        BadImplementation = 17,
        FirstExtensionError = 128,
        LastExtensionError = 255,
    }
    public partial class X11Exception : System.Exception
    {
        public X11Exception(string message) { }
    }
    public partial class X11FramebufferSurface : Avalonia.Controls.Platform.Surfaces.IFramebufferPlatformSurface
    {
        public X11FramebufferSurface(System.IntPtr display, System.IntPtr xid, int depth, System.Func<double> scaling) { }
        public Avalonia.Platform.ILockedFramebuffer Lock() { throw null; }
    }
    [System.FlagsAttribute]
    public enum XCreateWindowFlags
    {
        CWBackPixmap = 1,
        CWBackPixel = 2,
        CWBorderPixmap = 4,
        CWBorderPixel = 8,
        CWBitGravity = 16,
        CWWinGravity = 32,
        CWBackingStore = 64,
        CWBackingPlanes = 128,
        CWBackingPixel = 256,
        CWOverrideRedirect = 512,
        CWSaveUnder = 1024,
        CWEventMask = 2048,
        CWDontPropagate = 4096,
        CWColormap = 8192,
        CWCursor = 16384,
    }
    [System.FlagsAttribute]
    public enum XEventMask
    {
        NoEventMask = 0,
        KeyPressMask = 1,
        KeyReleaseMask = 2,
        ButtonPressMask = 4,
        ButtonReleaseMask = 8,
        EnterWindowMask = 16,
        LeaveWindowMask = 32,
        PointerMotionMask = 64,
        PointerMotionHintMask = 128,
        Button1MotionMask = 256,
        Button2MotionMask = 512,
        Button3MotionMask = 1024,
        Button4MotionMask = 2048,
        Button5MotionMask = 4096,
        ButtonMotionMask = 8192,
        KeymapStateMask = 16384,
        ExposureMask = 32768,
        VisibilityChangeMask = 65536,
        StructureNotifyMask = 131072,
        ResizeRedirectMask = 262144,
        SubstructureNotifyMask = 524288,
        SubstructureRedirectMask = 1048576,
        FocusChangeMask = 2097152,
        PropertyChangeMask = 4194304,
        ColormapChangeMask = 8388608,
        OwnerGrabButtonMask = 16777216,
    }
    [System.FlagsAttribute]
    public enum XiDeviceEventFlags
    {
        None = 0,
        XIPointerEmulated = 65536,
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public partial struct XImage
    {
        private int _dummyPrimitive;
        public int bitmap_bit_order;
        public int bitmap_pad;
        public int bitmap_unit;
        public int bits_per_pixel;
        public ulong blue_mask;
        public int bytes_per_line;
        public int byte_order;
        public System.IntPtr data;
        public int depth;
        public int format;
        public ulong green_mask;
        public int height;
        public ulong red_mask;
        public int width;
        public int xoffset;
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute]
        [System.Runtime.CompilerServices.UnsafeValueTypeAttribute]
        [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential, Size=128)]
        public partial struct <funcs>e__FixedBuffer
        {
            public byte FixedElementField;
        }
    }
    [System.FlagsAttribute]
    public enum XModifierMask
    {
        ShiftMask = 1,
        LockMask = 2,
        ControlMask = 4,
        Mod1Mask = 8,
        Mod2Mask = 16,
        Mod3Mask = 32,
        Mod4Mask = 64,
        Mod5Mask = 128,
        Button1Mask = 256,
        Button2Mask = 512,
        Button3Mask = 1024,
        Button4Mask = 2048,
        Button5Mask = 4096,
        AnyModifier = 32768,
    }
}
namespace Avalonia.X11.Interop
{
    public partial class GtkInteropHelper
    {
        public GtkInteropHelper() { }
        public static System.Threading.Tasks.Task<T> RunOnGlibThread<T>(System.Func<T> cb) { throw null; }
    }
}

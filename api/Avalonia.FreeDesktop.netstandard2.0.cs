//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GenAPI Version: 7.0.8.6004
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Avalonia.FreeDesktop
{
    public static partial class DBusHelper
    {
        public static Tmds.DBus.Connection? Connection { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } }
        public static Tmds.DBus.Connection? TryCreateNewConnection(string? dbusAddress = null) { throw null; }
        public static Tmds.DBus.Connection? TryInitialize(string? dbusAddress = null) { throw null; }
    }
    public partial class DBusMenuExporter
    {
        public DBusMenuExporter() { }
        public static Tmds.DBus.ObjectPath GenerateDBusMenuObjPath { get { throw null; } }
        public static Avalonia.Controls.Platform.INativeMenuExporter TryCreateDetachedNativeMenu(Tmds.DBus.ObjectPath path, Tmds.DBus.Connection currentConnection) { throw null; }
        public static Avalonia.Controls.Platform.ITopLevelNativeMenuExporter? TryCreateTopLevelNativeMenu(System.IntPtr xid) { throw null; }
    }
    public partial interface IX11InputMethodControl : System.IDisposable
    {
        bool IsEnabled { get; }
        event System.Action<string> Commit;
        event System.Action<Avalonia.FreeDesktop.X11InputMethodForwardedKey> ForwardKey;
        System.Threading.Tasks.ValueTask<bool> HandleEventAsync(Avalonia.Input.Raw.RawKeyEventArgs args, int keyVal, int keyCode);
        void SetWindowActive(bool active);
        void UpdateWindowInfo(Avalonia.PixelPoint position, double scaling);
    }
    public partial interface IX11InputMethodFactory
    {
        (Avalonia.Input.TextInput.ITextInputMethodImpl method, Avalonia.FreeDesktop.IX11InputMethodControl control) CreateClient(System.IntPtr xid);
    }
    public partial class LinuxMountedVolumeInfoProvider : Avalonia.Controls.Platform.IMountedVolumeInfoProvider
    {
        public LinuxMountedVolumeInfoProvider() { }
        public System.IDisposable Listen(System.Collections.ObjectModel.ObservableCollection<Avalonia.Controls.Platform.MountedVolumeInfo> mountedDrives) { throw null; }
    }
    [System.Runtime.InteropServices.StructLayoutAttribute(System.Runtime.InteropServices.LayoutKind.Sequential)]
    public partial struct X11InputMethodForwardedKey
    {
        private int _dummyPrimitive;
        public int KeyVal { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public Avalonia.Input.KeyModifiers Modifiers { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
        public Avalonia.Input.Raw.RawKeyEventType Type { [System.Runtime.CompilerServices.CompilerGeneratedAttribute] get { throw null; } [System.Runtime.CompilerServices.CompilerGeneratedAttribute] set { } }
    }
}
namespace Avalonia.FreeDesktop.DBusIme
{
    public partial class X11DBusImeHelper
    {
        public X11DBusImeHelper() { }
        public static bool DetectAndRegister() { throw null; }
    }
}
